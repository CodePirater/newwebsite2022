[
  {
    "objectID": "Virginia Election Walkthrough.html",
    "href": "Virginia Election Walkthrough.html",
    "title": "myDigitalAgeWebsite",
    "section": "",
    "text": "Introduction: This Code Walkthrough will use the joined_vacomparison dataset to analyze the electoral performance of presidential and gubernatorial candidates during the national elections. This walkthrough will be a step by step guide into the process of using datasets as potential sources for stories. This includes a comparison of total votes between candidates, % difference of votes, as well as steps to visualize them into tables and charts.\n\nlibrary(tidyverse)\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.4.0     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(janitor)\n\nWarning: package 'janitor' was built under R version 4.1.3\n\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(readxl) \nlibrary(scales)\n\nWarning: package 'scales' was built under R version 4.1.3\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(httr)\nlibrary(jsonlite)\n\n\nAttaching package: 'jsonlite'\n\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\nlibrary(kableExtra)\n\nWarning: package 'kableExtra' was built under R version 4.1.3\n\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(here)\n\nWarning: package 'here' was built under R version 4.1.3\n\n\nhere() starts at C:/Users/josha/Desktop/ReportingDigitalAge/digitalageGITREPOS/myDigitalAgeWebsite\n\noptions(scipen = 999)\noptions(stringsAsFactors = FALSE)\n\n#Load libraries\n \n#load saved joined data file from previous script\njoined_vacomparison <- readRDS(here(\"processed_data\", \"joined_vacomparison.rds\"))"
  },
  {
    "objectID": "Test Analysis Walkthrough.html",
    "href": "Test Analysis Walkthrough.html",
    "title": "Test Analysis Walkthrough",
    "section": "",
    "text": "First weâ€™ll load our libraries\n\n\nCode\nlibrary(tidyverse)\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.4.0     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(lubridate)\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\n\n\nCode\n# run this line below load the data for this assignment\nimpeach <- read_csv(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vRh8d5JaDqBtByzNw2JZF3idaACobDhhk-p7chJoktA0HawELHFOvjQOqCpzGA4MGONvPlR7GASqW-K/pub?gid=1765341510&single=true&output=csv\")\n\n\nRows: 235 Columns: 32\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr  (19): for_impeachment, last_name, first_name, middle_name, party, state...\ndbl  (10): date_month, date_year, median_income, median_age, pct_nonwhite, p...\ndate  (3): date_exact, date_approx_month, date_comb\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# it will load a dataframe called \"impeach,\" containing U.S. House Democrats\n# and whether they supported impeachment along with when they announced such support\n\nview(impeach)\n\n\n\n\nCode\n# 1) The column \"for_impeachment\" indicates whether the member has publicly called for\n# an impeachment inquiry. Filter to return only the ones where the answer is NO.    \n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>%\n  summarise(for_impeachment)\n\n\n# A tibble: 26 x 1\n   for_impeachment\n   <chr>          \n 1 NO             \n 2 NO             \n 3 NO             \n 4 NO             \n 5 NO             \n 6 NO             \n 7 NO             \n 8 NO             \n 9 NO             \n10 NO             \n# ... with 16 more rows\n\n\nCode\n#filtered impeach by filtering for_impeachment column for results that only showed \"No\"\n\n\n\n\nCode\n# 2) Filter to return only results where a member is both against impeachment, and comes from a \n# district that President Trump won in 2016 (which is noted in the \"p16winningparty\" column)\n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         p16winningparty == \"R\")\n\n\n# A tibble: 16 x 32\n   for_impeachment last_name  first_name middle_name party state district\n   <chr>           <chr>      <chr>      <chr>       <chr> <chr> <chr>   \n 1 YES             Axne       Cynthia    <NA>        D     IA    3       \n 2 YES             Cartwright Matt       <NA>        D     PA    8       \n 3 YES             Craig      Angie      <NA>        D     MN    2       \n 4 YES             Delgado    Antonio    <NA>        D     NY    19      \n 5 YES             Finkenauer Abby       <NA>        D     IA    1       \n 6 YES             Gottheimer Josh       <NA>        D     NJ    5       \n 7 YES             Kim        Andy       <NA>        D     NJ    3       \n 8 YES             Loebsack   Dave       <NA>        D     IA    2       \n 9 YES             Luria      Elaine     <NA>        D     VA    2       \n10 YES             Maloney    Sean       Patrick     D     NY    18      \n11 YES             Pappas     Chris      <NA>        D     NH    1       \n12 YES             Sherrill   Mikie      <NA>        D     NJ    11      \n13 YES             Slotkin    Elissa     <NA>        D     MI    8       \n14 YES             Spanberger Abigail    <NA>        D     VA    7       \n15 YES             Stevens    Haley      <NA>        D     MI    11      \n16 YES             Underwood  Lauren     <NA>        D     IL    14      \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered for_impeachment column for \"YES\" and p16winningparty by \"R\".\n\n\n\n\nCode\n# 3) Filter for only results where a member is against impeachment, comes from a \n# district that President Trump won in 2016 (which is noted in the \"p16winningparty\" column),\n# and also comes from a district that Mitt Romney won in 2012 (\"p12winningparty\").\n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         p16winningparty == \"R\",\n         p12winningparty == \"R\")\n\n\n# A tibble: 6 x 32\n  for_impeachment last_name  first_name middle_name party state district\n  <chr>           <chr>      <chr>      <chr>       <chr> <chr> <chr>   \n1 YES             Gottheimer Josh       <NA>        D     NJ    5       \n2 YES             Sherrill   Mikie      <NA>        D     NJ    11      \n3 YES             Slotkin    Elissa     <NA>        D     MI    8       \n4 YES             Spanberger Abigail    <NA>        D     VA    7       \n5 YES             Stevens    Haley      <NA>        D     MI    11      \n6 YES             Underwood  Lauren     <NA>        D     IL    14      \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered impeach by those who said no to impeaching trump and states who voted trump in 2016 and Romney in 2012\n\n\n\n\nCode\n# 4) Filter for only results from September 2019 where a member is a YES for impeachment. \n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         year(date_exact) == 2019,\n         month(date_approx_month) == 9)\n\n\n# A tibble: 0 x 32\n# ... with 32 variables: for_impeachment <chr>, last_name <chr>,\n#   first_name <chr>, middle_name <chr>, party <chr>, state <chr>,\n#   district <chr>, date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>, ...\n\n\nCode\n#filtered for_impeachment for only \"YES\" results for impeaching trump in September 2019 by sorting for the year 2019 and the month September\n\n\n\n\nCode\n# 5) Filter for only results where a member is a YES for impeachment and is from a district\n# where Clinton won more than 70 percent of the vote in 2016 (found in column \"clinton_percent\")\n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         p16winningparty == \"D\",\n         clinton_percent > 70 )\n\n\n# A tibble: 55 x 32\n   for_impeachment last_name first_name middle_name party state district\n   <chr>           <chr>     <chr>      <chr>       <chr> <chr> <chr>   \n 1 YES             Barragan  Nanette    <NA>        D     CA    44      \n 2 YES             Bass      Karen      <NA>        D     CA    37      \n 3 YES             Beyer     Donald     <NA>        D     VA    8       \n 4 YES             Boyle     Brendan    <NA>        D     PA    2       \n 5 YES             Brown     Anthony    <NA>        D     MD    4       \n 6 YES             Cardenas  Tony       <NA>        D     CA    29      \n 7 YES             Clarke    Yvette     D.          D     NY    9       \n 8 YES             Clay      William    Lacy        D     MO    1       \n 9 YES             Cohen     Steve      <NA>        D     TN    9       \n10 YES             Cummings  Elijah     E.          D     MD    7       \n# ... with 45 more rows, and 25 more variables: date_exact <date>,\n#   date_approx_month <date>, date_comb <date>, date_month <dbl>,\n#   date_year <dbl>, margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtering for yes vote to impeach and voted for Clinton more than 70%.\n\n\n\n\nCode\n# 6) Sort the entire dataframe based on the percentage of a district that has a \n# bachelor's degree or higher (\"pct_bachelors\"), from lowest to highest\n\nimpeach %>% \n  arrange(pct_bachelors)\n\n\n# A tibble: 235 x 32\n   for_impeachment last_name     first_name middle_name party state district\n   <chr>           <chr>         <chr>      <chr>       <chr> <chr> <chr>   \n 1 YES             Cox           TJ         <NA>        D     CA    21      \n 2 YES             Roybal-Allard Lucille    <NA>        D     CA    40      \n 3 YES             Garcia        Sylvia     <NA>        D     TX    29      \n 4 YES             Veasey        Marc       <NA>        D     TX    33      \n 5 YES             Costa         Jim        <NA>        D     CA    16      \n 6 YES             Barragan      Nanette    <NA>        D     CA    44      \n 7 YES             Serrano       Jose       E.          D     NY    15      \n 8 YES             Vargas        Juan       <NA>        D     CA    51      \n 9 YES             Gallego       Ruben      <NA>        D     AZ    7       \n10 YES             Tlaib         Rashida    <NA>        D     MI    13      \n# ... with 225 more rows, and 25 more variables: date_exact <date>,\n#   date_approx_month <date>, date_comb <date>, date_month <dbl>,\n#   date_year <dbl>, margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#sorted data frame by putting pct_bachelors inside arrange\n\n\n\n\nCode\n# 7) Sort the just those who are NO on impeachment based on the percentage of a district that has a \n# bachelor's degree or higher (\"pct_bachelors\"), from lowest to highest\n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>% \n  arrange(pct_bachelors)\n\n\n# A tibble: 26 x 32\n   for_impeachment last_name    first_name middle_name party state district\n   <chr>           <chr>        <chr>      <chr>       <chr> <chr> <chr>   \n 1 NO              Cuellar      Henry      <NA>        D     TX    28      \n 2 NO              Bustos       Cheri      <NA>        D     IL    17      \n 3 NO              Wilson       Frederica  <NA>        D     FL    24      \n 4 NO              Gonzalez     Vicente    <NA>        D     TX    15      \n 5 NO              Sewell       Terri      <NA>        D     AL    7       \n 6 NO              Lawson       Al         <NA>        D     FL    5       \n 7 NO              Johnson      Eddie      Bernice     D     TX    30      \n 8 NO              Horsford     Steven     <NA>        D     NV    4       \n 9 NO              Torres Small Xochitl    <NA>        D     NM    2       \n10 NO              Peterson     Collin     C.          D     MN    7       \n# ... with 16 more rows, and 25 more variables: date_exact <date>,\n#   date_approx_month <date>, date_comb <date>, date_month <dbl>,\n#   date_year <dbl>, margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered by no vote on impeach and arranged pct_bachelors by lowest to highest\n\n\n\n\nCode\n# 8) Sort the just those who are NO on impeachment based on the percentage of a district that has a \n# bachelor's degree or higher (\"pct_bachelors\"), from lowest to highest.\n# Then filter those records by only those whose bachelor's percentage is below the national average (found\n# in the \"pct_bachelors_compared_to_national\" column).\n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>% \n  arrange(pct_bachelors) %>% \n  filter(pct_bachelors_compared_to_national == \"BELOW\" )\n\n\n# A tibble: 19 x 32\n   for_impeachment last_name    first_name middle_name party state district\n   <chr>           <chr>        <chr>      <chr>       <chr> <chr> <chr>   \n 1 NO              Cuellar      Henry      <NA>        D     TX    28      \n 2 NO              Bustos       Cheri      <NA>        D     IL    17      \n 3 NO              Wilson       Frederica  <NA>        D     FL    24      \n 4 NO              Gonzalez     Vicente    <NA>        D     TX    15      \n 5 NO              Sewell       Terri      <NA>        D     AL    7       \n 6 NO              Lawson       Al         <NA>        D     FL    5       \n 7 NO              Johnson      Eddie      Bernice     D     TX    30      \n 8 NO              Horsford     Steven     <NA>        D     NV    4       \n 9 NO              Torres Small Xochitl    <NA>        D     NM    2       \n10 NO              Peterson     Collin     C.          D     MN    7       \n11 NO              Golden       Jared      <NA>        D     ME    2       \n12 NO              O'Halleran   Tom        <NA>        D     AZ    1       \n13 NO              Brindisi     Anthony    <NA>        D     NY    22      \n14 NO              Kind         Ron        <NA>        D     WI    3       \n15 NO              Van Drew     Jefferson  <NA>        D     NJ    2       \n16 NO              Gabbard      Tulsi      <NA>        D     HI    2       \n17 NO              McAdams      Ben        <NA>        D     UT    4       \n18 NO              Schrader     Kurt       <NA>        D     OR    5       \n19 NO              Horn         Kendra     <NA>        D     OK    5       \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered by no vote on impeach and arranged pct_bachelors by lowest to highest then filtered againt for bachelors degrees lower than national average\n\n\n\n\nCode\n# 9) Filter for only members from New Jersey who are NO on impeachment\n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>% \n  filter(state == \"NJ\")\n\n\n# A tibble: 1 x 32\n  for_impeachment last_name first_name middle_name party state district\n  <chr>           <chr>     <chr>      <chr>       <chr> <chr> <chr>   \n1 NO              Van Drew  Jefferson  <NA>        D     NJ    2       \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered for members of congress from New Jersey who voted no to impeachment by limiting for_impeachment to \"NO\" results corresponding to the state of New Jersey.\n\n\n\n\nCode\n# 10) Filter for those who were YES on impeachment, with a declared date prior to 2019. So only\n# those with dates before 2019.  Then sort those so that the highest Clinton vote percentages are \n# at the top.   \nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         year(date_exact) == 2017,\n         ) %>%\n  arrange(clinton_percent>trump_percent)\n\n\n# A tibble: 6 x 32\n  for_impeachment last_name first_name middle_name party state district\n  <chr>           <chr>     <chr>      <chr>       <chr> <chr> <chr>   \n1 YES             Clarke    Yvette     D.          D     NY    9       \n2 YES             Evans     Dwight     <NA>        D     PA    3       \n3 YES             Gomez     Jimmy      <NA>        D     CA    34      \n4 YES             Huffman   Jared      <NA>        D     CA    2       \n5 YES             Moore     Gwen       <NA>        D     WI    4       \n6 YES             Sherman   Brad       <NA>        D     CA    30      \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered for_impeachment for \"YES\" results corresponding to the date 2017 arranged to those who voted for Clinton agaisnt Trump.\n\n\n\n\nCode\n# 11) Answer this question with a single numeric answer, and show the R code you\n# used to reach that answer: How many members in the dataset who are holdouts on impeachment\n# come from districts with a GDP below the national figure?\n# Hint: there's a function called nrow() that tells you how many rows are in a dataframe\n\nimpeach %>% \n  filter(gdp_above_national == \"BELOW\",\n         for_impeachment == \"NO\") %>% \n  nrow()\n\n\n[1] 19\n\n\nCode\n#I got 19 by filtering gdp_above_national column to only \"BELOW\" and sorting for \"no\" to impeaching trump in for_impeachment column."
  },
  {
    "objectID": "02_virginia_election_project_youranalysis.html",
    "href": "02_virginia_election_project_youranalysis.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "Introduction: This Code Walkthrough will use the joined_vacomparison dataset to analyze the electoral performance of presidential and gubernatorial candidates during the national elections. This walkthrough will be a step by step guide into the process of using datasets as potential sources for stories. This includes a comparison of total votes between candidates, % difference of votes, as well as steps to visualize them into tables and charts.\n\nComparing Virginia Gov vs.Â Prez\n\n\nCode\nhead(joined_vacomparison)\n\n\n# A tibble: 6 x 9\n  locality       biden trump biden_pct trump_pct youngkin mcauliffe pct_youngkin\n  <chr>          <dbl> <dbl>     <dbl>     <dbl>    <int>     <int>        <dbl>\n1 ACCOMACK COUN~  7578  9172      44.7      54.1     7878      4948         61.1\n2 ALBEMARLE COU~ 42466 20804      65.7      32.2    19141     31919         37.2\n3 ALEXANDRIA CI~ 66240 14544      80.3      17.6    14013     43866         24.0\n4 ALLEGHANY COU~  2243  5859      27.3      71.4     4530      1518         74.5\n5 AMELIA COUNTY   2411  5390      30.6      68.3     4720      1617         74.2\n6 AMHERST COUNTY  5672 11041      33.4      64.9     9731      3897         71  \n# ... with 1 more variable: pct_mcauliffe <dbl>\n\n\nInclude code to a new column to the dataset calculating the difference between the percentage of the vote Youngkin received and what Trump received.\n\n\nCode\nyoungkinvstrump <- (joined_vacomparison) %>%\n  group_by(trump_pct, pct_youngkin)\n\nhead(youngkinvstrump)\n\n\n# A tibble: 6 x 9\n# Groups:   trump_pct, pct_youngkin [6]\n  locality       biden trump biden_pct trump_pct youngkin mcauliffe pct_youngkin\n  <chr>          <dbl> <dbl>     <dbl>     <dbl>    <int>     <int>        <dbl>\n1 ACCOMACK COUN~  7578  9172      44.7      54.1     7878      4948         61.1\n2 ALBEMARLE COU~ 42466 20804      65.7      32.2    19141     31919         37.2\n3 ALEXANDRIA CI~ 66240 14544      80.3      17.6    14013     43866         24.0\n4 ALLEGHANY COU~  2243  5859      27.3      71.4     4530      1518         74.5\n5 AMELIA COUNTY   2411  5390      30.6      68.3     4720      1617         74.2\n6 AMHERST COUNTY  5672 11041      33.4      64.9     9731      3897         71  \n# ... with 1 more variable: pct_mcauliffe <dbl>\n\n\nCode\npct_diff_YT <- youngkinvstrump %>%\n  group_by(trump_pct, pct_youngkin) %>%\n  summarise(votemargin=pct_youngkin-trump_pct)\n\n\n`summarise()` has grouped output by 'trump_pct'. You can override using the\n`.groups` argument.\n\n\nCode\njoined_vacomparison<- cbind(joined_vacomparison, pct_diff_YT$votemargin)\n\n\nUse this new column to find the Top 5 counties with the highest differences between Younkin/Trump percent, and then create a well-labeled chart to visualize them.\n\n\nCode\nyoungkincounties <- joined_vacomparison %>%\n  group_by(locality)%>%\n  arrange(-`pct_diff_YT$votemargin`)%>%\n  head(5)%>%\n  summarise(pctdifference=`pct_diff_YT$votemargin`)\n\nyoungkincounties %>%\n  ggplot(aes(x = reorder(locality, pctdifference), y = pctdifference)) +\n  geom_col(color = \"#9ebcda\", fill = \"#9ebcda\") +\n  coord_flip() +\n  scale_y_continuous(name = \"PCT Difference\", labels = scales::comma) +\n  scale_x_discrete(name = \"Top 5 Counties\") +\n  labs(title = \"Vote Percentage Difference Between Youngkin & Trump\") +\n  theme_classic()\n\n\n\n\n\nCreate a chart that shows the Top 5 counties based on where Youngkin got the highest percentage of the vote\n\n\nCode\nyoungkinwins <- joined_vacomparison %>%\n  group_by(youngkin, trump) %>%\n  arrange(-joined_vacomparison$youngkin+joined_vacomparison$trump)%>%\n  head(5)%>%\n  summarise(pcthigh=joined_vacomparison$youngkin+joined_vacomparison$trump)\n\n\n`summarise()` has grouped output by 'youngkin', 'trump'. You can override using\nthe `.groups` argument.\n\n\nCode\nyoungkinhigh <- youngkinwins %>%\n  mutate(\n    pct_youngkin = janitor::round_half_up(youngkin / pcthigh * 100, 2), trump_pct = janitor::round_half_up(trump/ pcthigh *100, 2)\n  ) %>%\n  head(5)\n\nyoungkinhigh %>%\n  ggplot(aes(x = reorder(youngkin, pcthigh), y = pcthigh)) +\n  geom_col(color = \"#9ebcda\", fill = \"#9ebcda\") +\n  coord_flip() +\n  scale_y_continuous(name = \"Vote %\", labels = scales::comma) +\n  scale_x_discrete(name = \"Counties\") +\n  labs(title = \"Top Youngkin Counties\") +\n  theme_classic()\n\n\n\n\n\nCreate a table that shows the Top 5 counties based on where McCauliffe got the highest percentage of the vote\n\n\nCode\njoined_vacomparison <- readRDS(here(\"processed_data\", \"joined_vacomparison.rds\"))\n\nMcCauliffvstrump <- (joined_vacomparison) %>%\n  group_by(pct_mcauliffe, trump_pct)\n\nhead(McCauliffvstrump)\n\n\n# A tibble: 6 x 9\n# Groups:   pct_mcauliffe, trump_pct [6]\n  locality       biden trump biden_pct trump_pct youngkin mcauliffe pct_youngkin\n  <chr>          <dbl> <dbl>     <dbl>     <dbl>    <int>     <int>        <dbl>\n1 ACCOMACK COUN~  7578  9172      44.7      54.1     7878      4948         61.1\n2 ALBEMARLE COU~ 42466 20804      65.7      32.2    19141     31919         37.2\n3 ALEXANDRIA CI~ 66240 14544      80.3      17.6    14013     43866         24.0\n4 ALLEGHANY COU~  2243  5859      27.3      71.4     4530      1518         74.5\n5 AMELIA COUNTY   2411  5390      30.6      68.3     4720      1617         74.2\n6 AMHERST COUNTY  5672 11041      33.4      64.9     9731      3897         71  \n# ... with 1 more variable: pct_mcauliffe <dbl>\n\n\nCode\npct_diff_MCT <- McCauliffvstrump %>%\n  group_by(trump_pct, pct_mcauliffe) %>%\n  summarise(votemargin=pct_mcauliffe-trump_pct)\n\n\n`summarise()` has grouped output by 'trump_pct'. You can override using the\n`.groups` argument.\n\n\nCode\njoined_vacomparison<- cbind(joined_vacomparison, pct_diff_MCT$votemargin)\n\n\nMcCauliffecounties <- joined_vacomparison %>%\n  group_by(locality)%>%\n  arrange(-pct_diff_MCT$votemargin)%>%\n  head(5)%>%\n  summarise(pctdifference=pct_diff_MCT$votemargin)\n\n\n`summarise()` has grouped output by 'locality'. You can override using the\n`.groups` argument.\n\n\nCode\nMcCauliffecounties %>%\n  ggplot(aes(x = reorder(locality, pctdifference), y = pctdifference)) +\n  geom_col(color = \"#9ebcda\", fill = \"#9ebcda\") +\n  coord_flip() +\n  scale_y_continuous(name = \"PCT Difference\", labels = scales::comma) +\n  scale_x_discrete(name = \"Top 5 Counties\") +\n  labs(title = \"Vote Percentage Difference Between McCauliffe & Trump\") +\n  theme_classic()\n\n\n\n\n\nBased on your own analysis, explain a finding of your choosing, include a narrative explaining it to the audience and then create either a chart or table displaying it.\n\n\nCode\njoined_vacomparison <- readRDS(here(\"processed_data\", \"joined_vacomparison.rds\"))\n\ngovernorrace <- (joined_vacomparison) %>%\n  group_by(pct_mcauliffe, pct_youngkin, locality) %>%\n  head(5) %>%\n  summarise(votemargin = pct_youngkin-pct_mcauliffe)\n\n\n`summarise()` has grouped output by 'pct_mcauliffe', 'pct_youngkin'. You can\noverride using the `.groups` argument.\n\n\nCode\nhead(governorrace)\n\n\n# A tibble: 5 x 4\n# Groups:   pct_mcauliffe, pct_youngkin [5]\n  pct_mcauliffe pct_youngkin locality         votemargin\n          <dbl>        <dbl> <chr>                 <dbl>\n1          25.0         74.5 ALLEGHANY COUNTY       49.6\n2          25.4         74.2 AMELIA COUNTY          48.8\n3          38.4         61.1 ACCOMACK COUNTY        22.7\n4          62.0         37.2 ALBEMARLE COUNTY      -24.8\n5          75.2         24.0 ALEXANDRIA CITY       -51.2\n\n\nCode\npct_diff_MY <- governorrace %>%\n  group_by(pct_mcauliffe, pct_youngkin, locality) %>%\n  summarise(votemargin=pct_youngkin-pct_mcauliffe)\n\n\n`summarise()` has grouped output by 'pct_mcauliffe', 'pct_youngkin'. You can\noverride using the `.groups` argument.\n\n\nOf the top five counties with high margin of votes between candidates, three went to Youngkin who won the election. Both candidates won their respective counties with either 60-70% of the votes.\nBased on your own analysis, explain a second finding of your choosing, include a narrative explaining it to the audience and then create either a chart or table displaying it.\n\n\nCode\njoined_vacomparison <- readRDS(here(\"processed_data\", \"joined_vacomparison.rds\"))\n\ngovernorvotes <- (joined_vacomparison) %>%\n  group_by(youngkin) %>%\n  head(5)\n\ngovernors<- governorvotes %>%\n  group_by(youngkin, mcauliffe)%>%\n  head(5)%>%\n  summarise()\n\n\n`summarise()` has grouped output by 'youngkin'. You can override using the\n`.groups` argument.\n\n\nCode\nggplot(governorvotes, aes(x = governors$youngkin, y = locality)) +\n  geom_col()+\n  scale_fill_manual(values = c(\"#468189\", \"#9DBEBB\"))\n\n\n\n\n\nThese Graphs visualize the support both candidates receieved in the conties with most votes. Youngkin had a huge lead in Amelia and Alleghany with moderate support from Alexandria and Albemarble. While McCauliffe still dominated Alexandria and Albemarble, he had even fewer support in Amelia and Alleghany. Youngkin would do well even in counties he lost, whole McCauliffe barely registers in counties he lost. Patterns like these likely led to Youngkinâ€™s election win.\n\n\nCode\nggplot(governorvotes, aes(x = governorvotes$locality, y = governorvotes$mcauliffe)) +\n  geom_col()+\n  coord_flip()+\n  scale_fill_manual(values = c(\"#468189\", \"#9DBEBB\"))\n\n\n\n\n\nBased on your own analysis, explain a third finding of your choosing, include a narrative explaining it to the audience and then create either a chart or table displaying it.\n\n\nCode\njoined_vacomparison <- readRDS(here(\"processed_data\", \"joined_vacomparison.rds\"))\n\npresZ_race <- (joined_vacomparison) %>%\n  group_by(biden_pct, trump_pct) %>%\n  head(5)\n\ngovs_race <- (joined_vacomparison)\n\ngovs_race <- (joined_vacomparison) %>%\n  group_by(govs_race$pct_youngkin, govs_race$pct_mcauliffe) %>%\n  head(5)\n\n\npct_diff_elec <- merge(govs_race, presZ_race) %>%\n  group_by(locality) %>%\n  summarise(votecount=mean(biden_pct-trump_pct), mean(pct_youngkin-pct_mcauliffe))\n\nhead(pct_diff_elec)\n\n\n# A tibble: 5 x 3\n  locality         votecount `mean(pct_youngkin - pct_mcauliffe)`\n  <chr>                <dbl>                                <dbl>\n1 ACCOMACK COUNTY      -9.39                                 22.7\n2 ALBEMARLE COUNTY     33.5                                 -24.8\n3 ALEXANDRIA CITY      62.6                                 -51.2\n4 ALLEGHANY COUNTY    -44.1                                  49.6\n5 AMELIA COUNTY       -37.7                                  48.8\n\n\nIn This table is the mean difference or gap of votes between presidential and gubernatorial candidates. The difference in votes seems to be slightly higher in the gubenatorial race compared to the presidential race.\n\n\nCode\npct_diff_elec %>%\n  ggplot(aes(x= reorder(locality, votecount), y = votecount ))+\n  geom_col(color = \"#9ebcda\", fill = \"#9ebcda\")+\n  coord_flip()+\n  scale_y_continuous(name = \"Votecount\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Mean Total votes between Governor and Presidential Candidates in Virginia\", \n       subtitle = \"2020\") +\n  theme_classic()"
  }
]