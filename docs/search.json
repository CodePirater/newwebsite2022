[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi, I’m Josh and I am a student from George Washington University."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nGeorge Washington University United Nations International School"
  },
  {
    "objectID": "about.html#work-experience",
    "href": "about.html#work-experience",
    "title": "About",
    "section": "Work Experience",
    "text": "Work Experience\nTBA"
  },
  {
    "objectID": "about.html#skills",
    "href": "about.html#skills",
    "title": "About",
    "section": "Skills",
    "text": "Skills\nPhotography Video Production Reporting and Writing Data Analysis\nhttps://github.com/CodePirater/newwebsite2022.git To learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "Migrant Article Text.html",
    "href": "Migrant Article Text.html",
    "title": "Migrant Story",
    "section": "",
    "text": "Article–\nWashington nonprofits welcome arriving migrants bussed to Union Station every week.\nWhen Texas Gov. Abbott bussed migrants to Washington, D.C. on April 13, 2022, nonprofit organizations assisted the migrants arriving in Union Station every week. With an initial FEMA funding of $2 million in early September, Washington nonprofits share their experience tackling the crisis.\n“Seeing an influx of migrants coming in, we knew that as an immigrant organization, we had to help out in one way or another,” says Catherine Rubio, Director of Operations at Central American Resource Center (CARECEN) on assisting the bussed migrants. CARECEN primarily focuses on housing, counseling, and pro bono legal services for Central American immigrants but was first to welcome the migrants in April. She estimates that about 80-85% of migrants arriving in the district leave for another destination.\nSAMU First Response eventually lead in assisting the arriving migrants with CARECEN stepping into a supporting role. SAMU provides international humanitarian assistance to refugees and migrants, which Tatiana Laborde, U.S. Managing Director of SAMU, says made sense for them to get involved. “After a month of working as volunteers, we sent a proposal for funding from FEMA,” says Ms. Laborde “and on June 22 we started operating under that grant”. She says the fund buys general supplies and bus or plane tickets for migrants leaving Washington. Although Texas and Arizona had been unwelcoming, Ms. Laborde says migrants have a better chance of being granted asylum from northern and democratic cities.\n“Texas is making it easier for the migrants to get their asylum approved because by percentages courts up north and in democratic cities are more open to approving their asylum cases,” which Ms. Laborde claims is only approving 17% of migrant cases compared to 75-80% in New York City. She estimates 9,000-10,000 migrants have arrived in Washington. Upon arriving, migrants are still reliant on the community. This where St. Peter’s Parish comes in. Rev. Daniel Carson says St. Peter’s offered their reception hall and parochial vicars to work alongside CARECEN and SAMU.\n“SAMU was looking for a place to do the processing, instead of having to do it right there at Union Station,” says Rev. Carson who explains they offer their parish “two or three days a week.” In one day, one or two buses arrive carrying 40 individuals in each. The parish has separate bathrooms for men and women, as well as clothes, food, and medical supplies.\nMigrants continue to arrive unsure of what awaits them with no indication of Texas and Arizona relenting, and Florida’s stunt in Martha’s Vineyard. Ms. Laborde recalls a mother who traveled from Venezuela who had her one-month-old baby brought to a children’s hospital.\n“She looked at me and said,”do you judge me for bringing my two children and my newborn in this journey?” and it was a matter of saying “No,” you did this because this is the only option you had, and I am nobody to judge you.”"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Link to journalistic academic work:\n\nThe Great Oktoberfest - https://joshangelodelatorr.editorx.io/the-great-oktoberfes\nWiener 500 - https://joshangelodelatorr.editorx.io/wiener-500-harvest\nDC Twilight - https://joshangelodelatorr.editorx.io/twilight"
  },
  {
    "objectID": "searchable_web_table.html",
    "href": "searchable_web_table.html",
    "title": "Making a searchable database table",
    "section": "",
    "text": "#### MAKING A SEARCHABLE TABLE FOR THE WEB ####\n\n# First -- let's talk about: what is the Internet? What IS a web page?\n# An oldie but a goodie from 2009: https://www.youtube.com/watch?v=7_LPdttKXPc\n# Bottom line, it's just a bunch of computers connected to each other. \n# A website? It's just files on someone else's computer (aka server)\n\n\n#We can use the \"DT\" package to easily make a sortable, filterable, searchable data table\n#Just this little bit of code does a whole lot - check it out:\n\nDT::datatable(events)\n\n\n\n\n\n\n\n#We can already sort, but what if we want to allow the table to be FILTERED too?\n#It's easy, we just add:\nDT::datatable(events, \n              rownames = FALSE, \n              filter = \"top\"# <--- NEW STUFF HERE\n              )\n\n\n\n\n\n\n\n#Now hmm, what's up with the filters on the text columns? Why aren't they working?\n#It's because of a quirk in DT tables where filters will only work on text that is converted to a factor\n#So let's do that\nevents <- events %>% \n  mutate(\n    state = as_factor(state),\n    event_type = as.factor(event_type)\n  )\n\n\n#Now let's try the DT table code again and see if it worked\nDT::datatable(events, \n              rownames = FALSE, \n              filter = \"top\")\n\n\n\n\n\n\n\n#Now, for the coup de gr?ce\n#let's add some buttons at the top of the page to let people copy, download, etc\n#we do that using a DT \"extenstion\" called, you guessed it, Buttons\n# https://rstudio.github.io/DT/extensions.html\n\nDT::datatable(events, \n              rownames = FALSE, \n              filter = \"top\", \n              extensions = 'Buttons', \n              options = list(   # <--- NEW STUFF STARTS HERE\n                dom = 'Bfrtip',\n                buttons = c('copy', 'csv', \"excel\")\n              )) %>%\n  DT::formatStyle('cand_lastname',  color = 'red', fontWeight = 'bold')\n\n\n\n\n\n\n\n## saving the result\n\n# first we just need to assign our table to a variable...\n\nmytable <- DT::datatable(events, \n                         rownames = FALSE, \n                         filter = \"top\", \n                         extensions = 'Buttons', \n                         options = list(\n                           dom = 'Bfrtip',\n                           buttons = c('copy', 'csv', \"excel\")\n                         )) %>%\n  DT::formatStyle('cand_lastname',  color = 'red', fontWeight = 'bold') \n\n# ... then just run this simple bit of code to export to html\nDT::saveWidget(mytable, \"mytable.html\")\n\n\n# We've now created a working web page that can be put anywhere on the internet we choose\n# Yay!\n\n# If we stay within the world of quarto though we don't need to export it, we can just display it\n# within the quarto page of course\n\nWhat if we have a little table and want a super minimal table with everything stripped out\n\nevents %>% \n  select(date, cand_lastname, city) %>%\n #select(description) %>%\n  head(5) %>% \n  DT::datatable(rownames = FALSE, \n                options = list(searching = FALSE, paging = FALSE, dom = \"tip\"))"
  },
  {
    "objectID": "Test Analysis Walkthrough.html",
    "href": "Test Analysis Walkthrough.html",
    "title": "Analysis Walkthrough",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.4.0     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(lubridate)\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\n\n\nCode\n# run this line below load the data for this assignment\nimpeach <- read_csv(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vRh8d5JaDqBtByzNw2JZF3idaACobDhhk-p7chJoktA0HawELHFOvjQOqCpzGA4MGONvPlR7GASqW-K/pub?gid=1765341510&single=true&output=csv\")\n\n\nRows: 235 Columns: 32\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr  (19): for_impeachment, last_name, first_name, middle_name, party, state...\ndbl  (10): date_month, date_year, median_income, median_age, pct_nonwhite, p...\ndate  (3): date_exact, date_approx_month, date_comb\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# it will load a dataframe called \"impeach,\" containing U.S. House Democrats\n# and whether they supported impeachment along with when they announced such support\n\nview(impeach)\n\n\n\n\nCode\n# 1) The column \"for_impeachment\" indicates whether the member has publicly called for\n# an impeachment inquiry. Filter to return only the ones where the answer is NO.    \n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>%\n  summarise(for_impeachment)\n\n\n# A tibble: 26 x 1\n   for_impeachment\n   <chr>          \n 1 NO             \n 2 NO             \n 3 NO             \n 4 NO             \n 5 NO             \n 6 NO             \n 7 NO             \n 8 NO             \n 9 NO             \n10 NO             \n# ... with 16 more rows\n\n\nCode\n#filtered impeach by filtering for_impeachment column for results that only showed \"No\"\n\n\n\n\nCode\n# 2) Filter to return only results where a member is both against impeachment, and comes from a \n# district that President Trump won in 2016 (which is noted in the \"p16winningparty\" column)\n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         p16winningparty == \"R\")\n\n\n# A tibble: 16 x 32\n   for_impeachment last_name  first_name middle_name party state district\n   <chr>           <chr>      <chr>      <chr>       <chr> <chr> <chr>   \n 1 YES             Axne       Cynthia    <NA>        D     IA    3       \n 2 YES             Cartwright Matt       <NA>        D     PA    8       \n 3 YES             Craig      Angie      <NA>        D     MN    2       \n 4 YES             Delgado    Antonio    <NA>        D     NY    19      \n 5 YES             Finkenauer Abby       <NA>        D     IA    1       \n 6 YES             Gottheimer Josh       <NA>        D     NJ    5       \n 7 YES             Kim        Andy       <NA>        D     NJ    3       \n 8 YES             Loebsack   Dave       <NA>        D     IA    2       \n 9 YES             Luria      Elaine     <NA>        D     VA    2       \n10 YES             Maloney    Sean       Patrick     D     NY    18      \n11 YES             Pappas     Chris      <NA>        D     NH    1       \n12 YES             Sherrill   Mikie      <NA>        D     NJ    11      \n13 YES             Slotkin    Elissa     <NA>        D     MI    8       \n14 YES             Spanberger Abigail    <NA>        D     VA    7       \n15 YES             Stevens    Haley      <NA>        D     MI    11      \n16 YES             Underwood  Lauren     <NA>        D     IL    14      \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered for_impeachment column for \"YES\" and p16winningparty by \"R\".\n\n\n\n\nCode\n# 3) Filter for only results where a member is against impeachment, comes from a \n# district that President Trump won in 2016 (which is noted in the \"p16winningparty\" column),\n# and also comes from a district that Mitt Romney won in 2012 (\"p12winningparty\").\n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         p16winningparty == \"R\",\n         p12winningparty == \"R\")\n\n\n# A tibble: 6 x 32\n  for_impeachment last_name  first_name middle_name party state district\n  <chr>           <chr>      <chr>      <chr>       <chr> <chr> <chr>   \n1 YES             Gottheimer Josh       <NA>        D     NJ    5       \n2 YES             Sherrill   Mikie      <NA>        D     NJ    11      \n3 YES             Slotkin    Elissa     <NA>        D     MI    8       \n4 YES             Spanberger Abigail    <NA>        D     VA    7       \n5 YES             Stevens    Haley      <NA>        D     MI    11      \n6 YES             Underwood  Lauren     <NA>        D     IL    14      \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered impeach by those who said no to impeaching trump and states who voted trump in 2016 and Romney in 2012\n\n\n\n\nCode\n# 4) Filter for only results from September 2019 where a member is a YES for impeachment. \n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         year(date_exact) == 2019,\n         month(date_approx_month) == 9)\n\n\n# A tibble: 0 x 32\n# ... with 32 variables: for_impeachment <chr>, last_name <chr>,\n#   first_name <chr>, middle_name <chr>, party <chr>, state <chr>,\n#   district <chr>, date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>, ...\n\n\nCode\n#filtered for_impeachment for only \"YES\" results for impeaching trump in September 2019 by sorting for the year 2019 and the month September\n\n\n\n\nCode\n# 5) Filter for only results where a member is a YES for impeachment and is from a district\n# where Clinton won more than 70 percent of the vote in 2016 (found in column \"clinton_percent\")\n\nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         p16winningparty == \"D\",\n         clinton_percent > 70 )\n\n\n# A tibble: 55 x 32\n   for_impeachment last_name first_name middle_name party state district\n   <chr>           <chr>     <chr>      <chr>       <chr> <chr> <chr>   \n 1 YES             Barragan  Nanette    <NA>        D     CA    44      \n 2 YES             Bass      Karen      <NA>        D     CA    37      \n 3 YES             Beyer     Donald     <NA>        D     VA    8       \n 4 YES             Boyle     Brendan    <NA>        D     PA    2       \n 5 YES             Brown     Anthony    <NA>        D     MD    4       \n 6 YES             Cardenas  Tony       <NA>        D     CA    29      \n 7 YES             Clarke    Yvette     D.          D     NY    9       \n 8 YES             Clay      William    Lacy        D     MO    1       \n 9 YES             Cohen     Steve      <NA>        D     TN    9       \n10 YES             Cummings  Elijah     E.          D     MD    7       \n# ... with 45 more rows, and 25 more variables: date_exact <date>,\n#   date_approx_month <date>, date_comb <date>, date_month <dbl>,\n#   date_year <dbl>, margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtering for yes vote to impeach and voted for Clinton more than 70%.\n\n\n\n\nCode\n# 6) Sort the entire dataframe based on the percentage of a district that has a \n# bachelor's degree or higher (\"pct_bachelors\"), from lowest to highest\n\nimpeach %>% \n  arrange(pct_bachelors)\n\n\n# A tibble: 235 x 32\n   for_impeachment last_name     first_name middle_name party state district\n   <chr>           <chr>         <chr>      <chr>       <chr> <chr> <chr>   \n 1 YES             Cox           TJ         <NA>        D     CA    21      \n 2 YES             Roybal-Allard Lucille    <NA>        D     CA    40      \n 3 YES             Garcia        Sylvia     <NA>        D     TX    29      \n 4 YES             Veasey        Marc       <NA>        D     TX    33      \n 5 YES             Costa         Jim        <NA>        D     CA    16      \n 6 YES             Barragan      Nanette    <NA>        D     CA    44      \n 7 YES             Serrano       Jose       E.          D     NY    15      \n 8 YES             Vargas        Juan       <NA>        D     CA    51      \n 9 YES             Gallego       Ruben      <NA>        D     AZ    7       \n10 YES             Tlaib         Rashida    <NA>        D     MI    13      \n# ... with 225 more rows, and 25 more variables: date_exact <date>,\n#   date_approx_month <date>, date_comb <date>, date_month <dbl>,\n#   date_year <dbl>, margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#sorted data frame by putting pct_bachelors inside arrange\n\n\n\n\nCode\n# 7) Sort the just those who are NO on impeachment based on the percentage of a district that has a \n# bachelor's degree or higher (\"pct_bachelors\"), from lowest to highest\n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>% \n  arrange(pct_bachelors)\n\n\n# A tibble: 26 x 32\n   for_impeachment last_name    first_name middle_name party state district\n   <chr>           <chr>        <chr>      <chr>       <chr> <chr> <chr>   \n 1 NO              Cuellar      Henry      <NA>        D     TX    28      \n 2 NO              Bustos       Cheri      <NA>        D     IL    17      \n 3 NO              Wilson       Frederica  <NA>        D     FL    24      \n 4 NO              Gonzalez     Vicente    <NA>        D     TX    15      \n 5 NO              Sewell       Terri      <NA>        D     AL    7       \n 6 NO              Lawson       Al         <NA>        D     FL    5       \n 7 NO              Johnson      Eddie      Bernice     D     TX    30      \n 8 NO              Horsford     Steven     <NA>        D     NV    4       \n 9 NO              Torres Small Xochitl    <NA>        D     NM    2       \n10 NO              Peterson     Collin     C.          D     MN    7       \n# ... with 16 more rows, and 25 more variables: date_exact <date>,\n#   date_approx_month <date>, date_comb <date>, date_month <dbl>,\n#   date_year <dbl>, margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered by no vote on impeach and arranged pct_bachelors by lowest to highest\n\n\n\n\nCode\n# 8) Sort the just those who are NO on impeachment based on the percentage of a district that has a \n# bachelor's degree or higher (\"pct_bachelors\"), from lowest to highest.\n# Then filter those records by only those whose bachelor's percentage is below the national average (found\n# in the \"pct_bachelors_compared_to_national\" column).\n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>% \n  arrange(pct_bachelors) %>% \n  filter(pct_bachelors_compared_to_national == \"BELOW\" )\n\n\n# A tibble: 19 x 32\n   for_impeachment last_name    first_name middle_name party state district\n   <chr>           <chr>        <chr>      <chr>       <chr> <chr> <chr>   \n 1 NO              Cuellar      Henry      <NA>        D     TX    28      \n 2 NO              Bustos       Cheri      <NA>        D     IL    17      \n 3 NO              Wilson       Frederica  <NA>        D     FL    24      \n 4 NO              Gonzalez     Vicente    <NA>        D     TX    15      \n 5 NO              Sewell       Terri      <NA>        D     AL    7       \n 6 NO              Lawson       Al         <NA>        D     FL    5       \n 7 NO              Johnson      Eddie      Bernice     D     TX    30      \n 8 NO              Horsford     Steven     <NA>        D     NV    4       \n 9 NO              Torres Small Xochitl    <NA>        D     NM    2       \n10 NO              Peterson     Collin     C.          D     MN    7       \n11 NO              Golden       Jared      <NA>        D     ME    2       \n12 NO              O'Halleran   Tom        <NA>        D     AZ    1       \n13 NO              Brindisi     Anthony    <NA>        D     NY    22      \n14 NO              Kind         Ron        <NA>        D     WI    3       \n15 NO              Van Drew     Jefferson  <NA>        D     NJ    2       \n16 NO              Gabbard      Tulsi      <NA>        D     HI    2       \n17 NO              McAdams      Ben        <NA>        D     UT    4       \n18 NO              Schrader     Kurt       <NA>        D     OR    5       \n19 NO              Horn         Kendra     <NA>        D     OK    5       \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered by no vote on impeach and arranged pct_bachelors by lowest to highest then filtered againt for bachelors degrees lower than national average\n\n\n\n\nCode\n# 9) Filter for only members from New Jersey who are NO on impeachment\n\nimpeach %>% \n  filter(for_impeachment == \"NO\") %>% \n  filter(state == \"NJ\")\n\n\n# A tibble: 1 x 32\n  for_impeachment last_name first_name middle_name party state district\n  <chr>           <chr>     <chr>      <chr>       <chr> <chr> <chr>   \n1 NO              Van Drew  Jefferson  <NA>        D     NJ    2       \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered for members of congress from New Jersey who voted no to impeachment by limiting for_impeachment to \"NO\" results corresponding to the state of New Jersey.\n\n\n\n\nCode\n# 10) Filter for those who were YES on impeachment, with a declared date prior to 2019. So only\n# those with dates before 2019.  Then sort those so that the highest Clinton vote percentages are \n# at the top.   \nimpeach %>% \n  filter(for_impeachment == \"YES\",\n         year(date_exact) == 2017,\n         ) %>%\n  arrange(clinton_percent>trump_percent)\n\n\n# A tibble: 6 x 32\n  for_impeachment last_name first_name middle_name party state district\n  <chr>           <chr>     <chr>      <chr>       <chr> <chr> <chr>   \n1 YES             Clarke    Yvette     D.          D     NY    9       \n2 YES             Evans     Dwight     <NA>        D     PA    3       \n3 YES             Gomez     Jimmy      <NA>        D     CA    34      \n4 YES             Huffman   Jared      <NA>        D     CA    2       \n5 YES             Moore     Gwen       <NA>        D     WI    4       \n6 YES             Sherman   Brad       <NA>        D     CA    30      \n# ... with 25 more variables: date_exact <date>, date_approx_month <date>,\n#   date_comb <date>, date_month <dbl>, date_year <dbl>,\n#   margin_flag_2018 <chr>, flip_2018 <chr>, house_dist <chr>,\n#   keyrace_rating <chr>, median_income <dbl>,\n#   median_income_compared_to_national <chr>, median_age <dbl>,\n#   median_age_compared_to_national <chr>, pct_nonwhite <dbl>,\n#   pct_nonwhite_compared_to_national <chr>, pct_bachelors <dbl>, ...\n\n\nCode\n#filtered for_impeachment for \"YES\" results corresponding to the date 2017 arranged to those who voted for Clinton agaisnt Trump.\n\n\n\n\nCode\n# 11) Answer this question with a single numeric answer, and show the R code you\n# used to reach that answer: How many members in the dataset who are holdouts on impeachment\n# come from districts with a GDP below the national figure?\n# Hint: there's a function called nrow() that tells you how many rows are in a dataframe\n\nimpeach %>% \n  filter(gdp_above_national == \"BELOW\",\n         for_impeachment == \"NO\") %>% \n  nrow()\n\n\n[1] 19\n\n\nCode\n#I got 19 by filtering gdp_above_national column to only \"BELOW\" and sorting for \"no\" to impeaching trump in for_impeachment column."
  }
]